/* Representing the eight puzzle for use with a DFS or BFS 
   
   The board is represented by the eight predicate. 
   eight(A, B, C, D, E, F, G, H, I)
   This indicates that the positions from the upper-left (A) to
   upper-right (C) to lower-left (G) and lower-right (I) are occupied
   by the given tile (values 1-8) or the space (0).
*/

/*
  initial_state: should be set up to randomize a starting point
*/

/* initial_state(eight, eight(0, 7, 6, 4, 5, 1, 3, 2, 8)). */
initial_state(eight, eight(1, 2, 0, 4, 5, 3, 7, 8, 6)).

/* 
   Puzzle is solved when the tile are in ascending order and the space
   is at the end.
*/
final_state(eight(1, 2, 3, 4, 5, 6, 7, 8, 0)).

/** move(Board0, Board1): a move from board configuration 0 to board
    configuration 1 is legal. Done by repeating all the possible 
    moves for each position the 0 could start in. 

    Layout of the rules shows the 9 elements of the board layed out
    in a grid. */ 
move(eight(0, B, C,
           D, E, F,
           G, H, I),
     eight(B, 0, C,
           D, E, F,
           G, H, I)).
move(eight(0, B, C,
           D, E, F,
           G, H, I),
     eight(D, B, C,
           0, E, F,
           G, H, I)).
move(eight(A, 0, C,
           D, E, F,
           G, H, I),
     eight(0, A, C,
           D, E, F,
           G, H, I)).
move(eight(A, 0, C,
           D, E, F,
           G, H, I),
     eight(A, C, 0,
           D, E, F,
           G, H, I)).
move(eight(A, 0, C,
           D, E, F,
           G, H, I),
     eight(A, E, C,
           D, 0, F,
           G, H, I)).
move(eight(A, B, 0,
           D, E, F,
           G, H, I),
     eight(A, 0, B,
           D, E, F,
           G, H, I)).
move(eight(A, B, 0,
           D, E, F,
           G, H, I),
     eight(A, B, F,
           D, E, 0,
           G, H, I)).
move(eight(A, B, C,
           0, E, F,
           G, H, I),
     eight(0, B, C,
           A, E, F,
           G, H, I)).
move(eight(A, B, C,
           0, E, F,
           G, H, I),
     eight(A, B, C,
           E, 0, F,
           G, H, I)).
move(eight(A, B, C,
           0, E, F,
           G, H, I),
     eight(A, B, C,
           G, E, F,
           0, H, I)).
move(eight(A, B, C,
           D, 0, F,
           G, H, I),
     eight(A, 0, C,
           D, B, F,
           G, H, I)).
move(eight(A, B, C,
           D, 0, F,
           G, H, I),
     eight(A, B, C,
           0, D, F,
           G, H, I)).
move(eight(A, B, C,
           D, 0, F,
           G, H, I),
     eight(A, B, C,
           D, F, 0,
           G, H, I)).
move(eight(A, B, C,
           D, 0, F,
           G, H, I),
     eight(A, B, C,
           D, H, F,
           G, 0, I)).
move(eight(A, B, C,
           D, E, 0,
           G, H, I),
     eight(A, B, 0,
           D, E, C,
           G, H, I)).
move(eight(A, B, C,
           D, E, 0,
           G, H, I),
     eight(A, B, C,
           D, 0, E,
           G, H, I)).
move(eight(A, B, C,
           D, E, 0,
           G, H, I),
     eight(A, B, C,
           D, E, I,
           G, H, 0)).
move(eight(A, B, C,
           D, E, F,
           0, H, I),
     eight(A, B, C,
           0, E, F,
           D, H, I)).
move(eight(A, B, C,
           D, E, F,
           0, H, I),
     eight(A, B, C,
           D, E, F,
           H, 0, I)).
move(eight(A, B, C,
           D, E, F,
           G, 0, I),
     eight(A, B, C,
           D, E, F,
           0, G, I)).
move(eight(A, B, C,
           D, E, F,
           G, 0, I),
     eight(A, B, C,
           D, 0, F,
           G, E, I)).
move(eight(A, B, C,
           D, E, F,
           G, 0, I),
     eight(A, B, C,
           D, E, F,
           G, I, 0)).
move(eight(A, B, C,
           D, E, F,
           G, H, 0),
     eight(A, B, C,
           D, E, 0,
           G, H, F)).
move(eight(A, B, C,
           D, E, F,
           G, H, 0),
     eight(A, B, C,
           D, E, F,
           G, 0, H)).

/* update(Board0, Move, Board1): a move is encoded as the result
   board. Thus all that needs to be done is instantiate Board1
   directly to the move. */
update(eight(_, _, _, _, _, _, _, _, _), 
       eight(A, B, C, D, E, F, G, H, I),      
       eight(A, B, C, D, E, F, G, H, I)).

/* legal(Board): just match if it is a board. No non-legal moves are
   generated by the move predicate. */
legal(eight(_, _, _, _, _, _, _, _, _)).

